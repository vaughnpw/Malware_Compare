import Layout from '../components/layout.js'
import {withRouter} from 'next/router'
import Markdown from 'react-markdown'
import { Component } from "react";
import reqwest from 'reqwest';
import fetch from 'isomorphic-unfetch'; 
import { Statistic, Row, Col, Button, Tabs, Icon, List, Avatar, Table, Empty, Modal } from 'antd';
import "../style.less";

const http = require('https');
const md5 = require('md5');
  
const report1_data = [
  {
    title: 'McAfee',
    description: 'Passed',
    website_link: 'https://www.mcafee.com/en-us/index.html',
    logo_link: 'https://s3.amazonaws.com/com.malware.compare/img/mcafee/mcafee_logo.png',
    content: 'We supply a series of design principles, practical patterns and high quality design resources (Sketch and Axure), to help people create their product prototypes beautifully and efficiently.'
  },
  {
    title: 'Malwarebytes',
    description: 'Passed',
    link: 'https://www.malwarebytes.com',
    logo_link: 'https://s3.amazonaws.com/com.malware.compare/img/malwarebytes/malwarebytes_logo.png',
    content: 'We supply a series of design principles, practical patterns and high quality design resources (Sketch and Axure), to help people create their product prototypes beautifully and efficiently.'
  },
  {
    title: 'AegisLab',
    description: 'Passed',
    link: 'https://www.aegislab.com/',
    logo_link: 'https://s3.amazonaws.com/com.malware.compare/img/aegislabs/aegislabs_logo.png',
    content: 'We supply a series of design principles, practical patterns and high quality design resources (Sketch and Axure), to help people create their product prototypes beautifully and efficiently.'
  },
  {
    title: 'Kaspersky',
    description: 'Passed',
    link: 'https://usa.kaspersky.com/',
    logo_link: 'https://s3.amazonaws.com/com.malware.compare/img/kaspesky/kaspesky_logo.png',
    content: 'We supply a series of design principles, practical patterns and high quality design resources (Sketch and Axure), to help people create their product prototypes beautifully and efficiently.'
  },
  {
    title: 'BitDefender',
    description: 'Passed',
    link: 'https://www.bitdefender.com/',
    logo_link: 'https://s3.amazonaws.com/com.malware.compare/img/bitdefender/bitdefender_logo.png',
    content: 'We supply a series of design principles, practical patterns and high quality design resources (Sketch and Axure), to help people create their product prototypes beautifully and efficiently.'
  },
];

const columns = [
  { title: 'Antivirus', dataIndex: 'antivirus', key: 'antivirus' },
  { title: 'Report1', dataIndex: 'file1', key: 'file1' },
  { title: 'Report2', dataIndex: 'file2', key: 'file2' }
];

const compare_data = [
  {
    key: 1, antivirus: 'McAfee', file1: 'Passed', file2: 'Passed', description: 'We supply a series of design principles, practical patterns and high quality design resources (Sketch and Axure), to help people create their product prototypes beautifully and efficiently.',
  },
  {
    key: 2, antivirus: 'Malwarebytes', file1: 'Passed', file2: 'Passed', description: 'We supply a series of design principles, practical patterns and high quality design resources (Sketch and Axure), to help people create their product prototypes beautifully and efficiently.',
  },
  {
    key: 3, antivirus: 'AegisLab', file1: 'Passed', file2: 'Failed', description: 'We supply a series of design principles, practical patterns and high quality design resources (Sketch and Axure), to help people create their product prototypes beautifully and efficiently.',
  },
  {
    key: 4, antivirus: 'Kaspersky', file1: 'Passed', file2: 'Passed', description: 'We supply a series of design principles, practical patterns and high quality design resources (Sketch and Axure), to help people create their product prototypes beautifully and efficiently.',
  },
  {
    key: 5, antivirus: 'BitDefender', file1: 'Passed', file2: 'Passed', description: 'We supply a series of design principles, practical patterns and high quality design resources (Sketch and Axure), to help people create their product prototypes beautifully and efficiently.',
  },
];

class Compare extends Component {

  constructor(props) {
    super(props);
    this.state = {
      reports: []
    };
  }

  state = {
      data: [],
      pagination: {},
      compared: false,
      modalVisible: false,
      modal2Visible: false
  };

  static async getInitialProps(props) {
    console.log('props received: ', props);
    const {query} = props;
    console.log('resources received on compare: ', query);
    if(query.resources) {
      const body = {
        resources: query.resources
      };
      try {
        const res = await fetch('https://ms4axfydt9.execute-api.us-east-1.amazonaws.com/dev/retrieveScan',
          {
            method: 'POST',
            headers: {
              'Access-Control-Allow-Origin': '*',
				      'Access-Control-Allow-Credentials': true,
              'Content-Type': 'application/json'
            },
            body: JSON.stringify(body)
          }
        );
        const json = await res.json();
        console.log('json from report: ', json);
        return { 
          report1: JSON.parse(json.reports[0]).scans,
          report2: JSON.parse(json.reports[1]).scans
        };
      }
      catch(e) {
        console.log('error with report fetch: ', e);
        return {
          error: e
        };
      }
    }
    else {
      console.log('no resources in query');
      return {
        error: "NO RESOURCES RECEIVED!!"
      };
    }
  }

  handleCompare = () => {
    this.setState({
      compared: true
    });
  } 

  setModalVisible = (modalVisible) => {
    this.setState({ 
      modalVisible
    });
  }

  setModal2Visible = (modal2Visible) => {
    this.setState({ 
      modal2Visible
    });
  }

  getNumberPassed = (json, length) => {
    var count = 0;
    var arr = [];
    Object.keys(json).forEach(function(key) {
      arr.push(json[key]);
    });
    for(var i = 0; i < length; i++) {
      if(arr[0].detected !== 'false'){
        count++;
      }
    }
    return count;
  }

  render() {
    const TabPane = Tabs.TabPane;
    const operations = <Button type='primary' onClick={this.handleCompare}>Compare</Button>;
    function callback(key) {
      console.log(key);
    }

    return(
        <Layout>
            <div className="compare_page_text">
                <h2>Compared Results</h2>
                <p>Based on your uploads here are the our comparisons.</p>
            </div>
            <div className="tab_container">
              <Row>
                <Col span={2}/>
                <Col span={18}>  
                  <Tabs onChange={callback} type="card" tabBarExtraContent={operations}>
                    {this.props.report1 ?
                      <TabPane tab="Report 1" key="1">
                        <a style={{color: '#1890ff', padding: 24}} onClick={() => this.setModalVisible(true)}>View Raw Report</a>
                        <Modal
                          title="Raw Report"
                          centered
                          visible={this.state.modalVisible}
                          onOk={() => this.setModalVisible(false)}
                          onCancel={() => this.setModalVisible(false)}
                          cancelText="Close"
                        >
                          <pre>{JSON.stringify(this.props.report1, null, 2)}</pre>
                        </Modal>
                      </TabPane> 
                      // <TabPane tab="Report 1" key="1">
                      //   <div className="tab_contents">
                      //     <h3>File Name</h3>
                      //     <h2 style={{marginBottom: 0}}>Unoffical_Transcript.pdf</h2>
                      //     <Row gutter={16} style={{padding: 24}}>
                      //       <Col span={2}/>
                      //       <Col span={10}>
                      //         <Statistic title={"Malware Scans Passed: "} value={10} prefix={<Icon type="like" style={{color: '#1890ff'}} />} suffix="/ 10" />
                      //       </Col>
                      //       <Col span={10}>
                      //         <Statistic title="Malware Scans Failed: " value={0} prefix={<Icon type="dislike" style={{color: '#f5222d'}} />} suffix="/ 10" />
                      //       </Col>
                      //       <Col span={2}/>
                      //     </Row>
                      //     <h3>Scans Completed</h3>
                      //     <List
                      //       itemLayout="vertical"
                      //       size="large"
                      //       pagination={{
                      //         onChange: (page) => {
                      //           console.log(page);
                      //         },
                      //         pageSize: 3,
                      //       }}
                      //       dataSource={this.props.report1}
                      //       renderItem={item => (
                      //         <List.Item
                      //           extra={<img width={272} alt="logo" src={item.logo_link} />}
                      //         >
                      //           <List.Item.Meta
                      //             avatar={(item.description === 'Passed' ? 
                      //                 <Avatar icon="check" style={{color: '#52c41a', backgroundColor: '#fff'}} />
                      //               :
                      //                 <Avatar icon="close" style={{color: '#f5222d', backgroundColor: '#fff'}}/>
                      //             )}
                      //             title={<a href={item.website_link}>{item.title}</a>}
                      //             description={item.description}
                      //           />
                      //           {item.content}
                      //         </List.Item>
                      //       )}
                      //     />
                      //   </div>
                      // </TabPane>
                    :
                      <TabPane tab="Report 1" key="1">
                        <Empty style={{padding: 24}}/>
                      </TabPane>
                    }
                    {this.props.report2 ? 
                      <TabPane tab="Report 2" key="2">
                        <a style={{color: '#1890ff', padding: 24}} onClick={() => this.setModal2Visible(true)}>View Raw Report</a>
                        <Modal
                          title="Raw Report"
                          centered
                          visible={this.state.modal2Visible}
                          onOk={() => this.setModal2Visible(false)}
                          onCancel={() => this.setModal2Visible(false)}
                          cancelText="Close"
                        >
                          <pre>{JSON.stringify(this.props.report2, null, 2)}</pre>
                        </Modal>
                      </TabPane>
                      // <TabPane tab="Report 2" key="2">
                      //   <div className="tab_contents">
                      //     <h3>File Name</h3>
                      //     <h2 style={{marginBottom: 0}}>aws_logo.svg</h2>
                      //     <Row gutter={16} style={{padding: 24}}>
                      //       <Col span={2}/>
                      //       <Col span={10}>
                      //         <Statistic title={"Malware Scans Passed: "} value={10} prefix={<Icon type="like" style={{color: '#1890ff'}} />} suffix="/ 10" />
                      //       </Col>
                      //       <Col span={10}>
                      //         <Statistic title="Malware Scans Failed: " value={0} prefix={<Icon type="dislike" style={{color: '#f5222d'}} />} suffix="/ 10" />
                      //       </Col>
                      //       <Col span={2}/>
                      //     </Row>
                      //     <h3>Scans Completed</h3>
                      //     <List
                      //       itemLayout="vertical"
                      //       size="large"
                      //       pagination={{
                      //         onChange: (page) => {
                      //           console.log(page);
                      //         },
                      //         pageSize: 3,
                      //       }}
                      //       dataSource={this.props.report2}
                      //       renderItem={item => (
                      //         <List.Item
                      //           extra={<img width={272} alt="logo" src={item.logo_link} />}
                      //         >
                      //           <List.Item.Meta
                      //             avatar={(item.description === 'Passed' ? 
                      //                 <Avatar icon="check" style={{color: '#52c41a', backgroundColor: '#fff'}} />
                      //               :
                      //                 <Avatar icon="close" style={{color: '#f5222d', backgroundColor: '#fff'}}/>
                      //             )}
                      //             title={<a href={item.website_link}>{item.title}</a>}
                      //             description={item.description}
                      //           />
                      //           {item.content}
                      //         </List.Item>
                      //       )}
                      //     />
                      //   </div>
                      // </TabPane>
                    :
                      <TabPane tab="Report 2" key="2">
                        <Empty style={{padding: 24}}/>
                      </TabPane>
                    }
                    {(this.state.compared === true) ? 
                        (this.props.report1 && this.props.report2) ?
                          <TabPane tab="Compared Reports" key="3">
                            <div className="tab_contents">
                              <h3>Report Names</h3>
                              <h2 style={{marginBottom: 0}}>Report1 & Report2</h2>
                              <Row gutter={16} style={{padding: 24}}>
                                <Col span={2}/>
                                <Col span={10}>
                                  <Statistic title={"Malware Scans Passed: Report1"} value={this.getNumberPassed(this.props.report1, Object.keys(this.props.report1).length)} prefix={<Icon type="like" style={{color: '#1890ff'}} />} suffix={'/ '+Object.keys(this.props.report1).length} />
                                </Col>
                                <Col span={10}>
                                  <Statistic title="Malware Scans Passed: Report2" value={this.getNumberPassed(this.props.report2, Object.keys(this.props.report2).length)} prefix={<Icon type="like" style={{color: '#1890ff'}} />} suffix={'/ '+Object.keys(this.props.report2).length} />
                                </Col>
                                <Col span={2}/>
                              </Row>
                              {/* <h3>Scans Completed</h3>
                              <Table
                                columns={columns}
                                expandedRowRender={record => <p style={{ margin: 0 }}>{record.description}</p>}
                                dataSource={compare_data}
                              /> */}
                            </div>
                          </TabPane>
                        :
                          <TabPane tab="Compared Reports" key="3">
                            <Empty style={{padding: 24}}/>
                          </TabPane>
                      : 
                        null
                    }
                  </Tabs>
                </Col>
                <Col span={4}/> 
              </Row>
            </div>
            <style jsx>{`
                .tab_container {
                  padding-top: 24px;
                }
                .tab_contents {
                  padding: 25px;
                }
            `}</style>
        </Layout>
    );
  }

}

export default Compare